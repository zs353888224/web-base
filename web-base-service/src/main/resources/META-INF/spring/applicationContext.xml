<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <import resource="classpath:/META-INF/spring/wscq-service.xml"/>

    <!--suppress SpringModelInspection -->
    <context:property-placeholder location="classpath*:/META-INF/spring/*.properties"/>

    <!-- Message -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!--suppress SpringModelInspection -->
                <value>i18n/application-messages</value>
                <!--<value>i18n/service-messages</value>-->
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- Exception Logger. -->
    <bean id="exceptionLogger" class="org.terasoluna.gfw.common.exception.ExceptionLogger">
        <property name="exceptionCodeResolver" ref="exceptionCodeResolver"/>
    </bean>
    <!-- Exception Code Resolver. -->
    <bean id="exceptionCodeResolver" class="org.terasoluna.gfw.common.exception.SimpleMappingExceptionCodeResolver">
        <!-- Setting and Customization by project. -->
        <property name="exceptionMappings">
            <!--suppress InjectionValueTypeInspection -->
            <map>
                <entry key="ResourceNotFoundException" value="e.xx.fw.5001"/>
                <entry key="InvalidTransactionTokenException" value="e.xx.fw.7001"/>
                <entry key="BusinessException" value="e.xx.fw.8001"/>
                <entry key=".DataAccessException" value="e.xx.fw.9002"/>
            </map>
        </property>
        <property name="defaultExceptionCode" value="e.xx.fw.9001"/>
    </bean>

    <!-- redis缓存的配置 -->
    <!-- Redis Template session相关设置 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
    </bean>

    <!-- 为session提过连接 -->
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" scope="prototype">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}" />
                    <constructor-arg name="port" value="${redis.port}" />
                    <constructor-arg name="timeout" value="${redis.timeout}" />
                    <property name="password" value="${redis.pass}"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    <!-- jedis pool配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxActive}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <!--
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        -->
    </bean>

    <!-- spring data redis 为session提供支持，目前也不支持集群 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="password" value="${redis.pass}" />
        <property name="timeout" value="${redis.timeout}" />
        <property name="database" value="${redis.default.db}"/>
        <constructor-arg index="0" ref="jedisPoolConfig" />
    </bean>

</beans>
